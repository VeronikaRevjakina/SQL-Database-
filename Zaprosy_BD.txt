

1 Запрос


Вывести фамилию,имя,номер в базе FSI спорстменок из определённой страны ,возраст которых на данный момент меньше 18 лет.Отсортировать по фамилии и имени спортсменки.

SELECT last_name, name, number_base_fsi FROM sportsmen AS s WHERE s.team_id=__TEAM__ AND s.date_of_birth > (CURRENT_DATE-6570 ) ORDER BY s.last_name, s.name;

Допустимые параметры [__TEAM__]:

- (1),
- (2),
- (5) и тд.


 Необходимость: Запрос нужен для отслеживания появления новых молодых спортсменок в команде,юниорок ,которые переходят на взрослый уровень выступления. Министерству спорта необходимо знать ,пополняется ли состав команды молодыми гимнастками, если таких гимнасток нет,то необходимо  обращать больше внимания на этот  спорт в стране(сюжеты на телевидении, местные соревнования и кубки,интервью с прославленными гимнастками,встречи с известными гимнастками),чтобы родители больше приводили детей секции по спортивной гимнастике и сборная пополнялась молодыми гимнастками,что ведет к развитию данного спорта в стране.


Оптимизация: (?) Был добавлен индекс sportsmen_team_id_date_of_birth_idx с условием по дате рождения,который сразу же вернет вcе подходящие записи .

CREATE INDEX sportsmen_team_id_date_of_birth_idx ON sportsmen (team_id, date_of_birth) WHERE date_of_birth + 6570 > CURRENT_DATE ;

или

CREATE INDEX ON sportsmen(team_id);

или

CREATE INDEX ON sportsmen(date_of_birth) WHERE (date_of_birth + 6570) > CURRENT_DATE ; 



 2 Запрос 

Выбрать  Фамилию и Имя спортсменки, верхний регистр имени которой равен заданному значению.


SELECT last_name,name FROM sportsmen AS s WHERE initcap(s.last_name)=__LAST_NAME__ OR initcap(s.name)=__NAME__;


Допустимые параметры [__LAST_NAME__, __NAME__]:

    ('Aliya', 'Mustafina')
    ('S', 'Biles')
                  ||->  (пример, если пользователь забыл имя или фамилию спотсменки)
    ('Amy', 'G') 

Необходимость:Поиск спортсменок по имени или фамилии. Если пользователь не помнит фамилии или имени спортсменки, то следует ввести первую букву названия страны,за которую она выступает, или рандомную заглавную букву английского алфавита. Если же требуется вывести фамилии и имена двух спортменок,то есть возможность ввести имя одной и фамилию другой.



Оптимизация: (?) Было добавлено два индекса sportsmen_name_idx_initcap и sportsmen_last_name_idx_initcap для осуществления фильтрации по верхнему регистру полей name и last_name. И необходимо 2 индекса, так как существует вероятность введения лишь одного корректного параметров (то есть не рандомную заглавную букву), а с общим индексом вес получается больше из-за двойной проверки.

CREATE INDEX sportsmen_name_idx_initcap ON sportsmen (initcap(name));
CREATE INDEX sportsmen_last_name_idx_initcap ON sportsmen (initcap(last_name));





3 Запрос

Вывести названия стран ,у которых существует капитан.

SELECT name_of_country FROM teams AS t WHERE t.captain_id IS NOT NULL;


Необходимость: Запрос позволяет узнать в каких странах в огранизационных моментах (получение пропусков на поселение,участие в конференции и интервью,выбор меню,жеребьёвка очередности проверки на допинг) будут принимать участие капитаны команд(спортсменки),так как в остальных странах,где не выбран капитан ,эти обязанности будет выполнять человек из тренерского штаба. (тренер или врач) 

Оптимизация: Нет необходимости создавать индекс на поле captain_id ,так как в postgres этот индекс существуе и используется соответствующий ключ teams_captain_id_key.




4 Запрос

Вывести названия наиболее престижных титулов ,которые обновляются не реже,чем раз в 2 года. Отсортировать по убыванию уровня престижа титула и вывести все ,удовлетворяющие условиям результаты.


SELECT name FROM main_titles AS mt WHERE (mt.level_of_prestige BETWEEN 6 AND 10) AND mt.title_duration <= 2  ORDER BY mt.level_of_prestige DESC ;

Необходимость: Запрос позволяет выделить престижные титулы,получаемые на соревнованиях,проводимых не реже,чем раз в 2 года ,и именно эта информация необходима спортивным комментаторам и спортивно аналитическому журналу,который публикуется раз в 2 года.  Соответствено ,благодаря этому запросу редакторам журнала легко определить информацию ,какие именно  титулы им нужно обновить и опубликовать(возможно появляются новые).


Оптимизация: Был добавлен индекс main_titles_level_of_prestige_title_duration_idx_2 с условием по уровню престижа и продолжительности действия, который сразу вернет нам идентификаторы нужных записей.
CREATE INDEX main_titles_level_of_prestige_title_duration_idx_2 ON main_titles(level_of_prestige,title_duration) WHERE (level_of_prestige BETWEEN 6 AND 10) AND title_duration <= 2;




5 Запрос

Вывести 3 вида упражнений ,длительность которых существует и является наименьшей. Отсортировать по названию упражнения и длительности по возрастанию.

SELECT name,description,year_of_introduction,duration_in_seconds FROM types_of_exercises AS te WHERE te.duration_in_seconds IS NOT NULL ORDER BY te.duration_in_seconds ASC LIMIT 3;

Необходимость: В показательных выступлениях гимнастки обычно демонстрируют 3 наиболее быстро (по времени) выполняемых снаряда, так как огранизаторы всегда ограничены во времени и стараются сделать выступления более компактными ,но впечатляющими. Также комментаторам необходима информция о названии снаяда,его описании и годе введения  для того,чтобы наиболее полно проинформировать и заинтересовать зрителя. 

Оптимизация: Был добавлен индекс types_of_exercises_duration_in_seconds_idx_not_null с условием,что длительность для данного вида упражений существует.

CREATE INDEX types_of_exercises_duration_in_seconds_idx_not_null ON types_of_exercises(duration_in_seconds) WHERE duration_in_seconds IS NOT NULL;




